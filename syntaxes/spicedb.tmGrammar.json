{
  "version": "0.1",
  "name": "SpiceDB Schema",
  "scopeName": "source.spicedb",
  "foldingStartMarker": "\\{\\s*$",
  "foldingStopMarker": "^\\s*\\}",
  "patterns": [
    { "include": "#comment" },
    { "include": "#definition" },
    { "include": "#caveat" },
    { "include": "#relation" },
    { "include": "#permission" }
  ],
  "repository": {
    "comment": {
      "patterns": [{ "include": "#lineComment" }, { "include": "#blockComment" }],
      "repository": {
        "lineComment": {
          "patterns": [{ "include": "#doubleSlashLineComment" }, { "include": "#slashDotLineComment" }],
          "repository": {
            "doubleSlashLineComment": {
              "match": "\\/\\/.*",
              "name": "comment.line.double-slash.spicedb"
            },
            "slashDotLineComment": {
              "match": "\\/\\*.*\\*\\/",
              "name": "comment.line.spicedb"
            }
          }
        },
        "blockComment": {
          "begin": "\\/\\*",
          "end": "\\*\\/",
          "name": "comment.block.spicedb"
        }
      }
    },
    "definition": {
      "comment": "definition of a resource type in schema",
      "begin": "(\\bdefinition\\b)\\s+([a-zA-Z_]\\w*)\\s*(\\{)",
      "beginCaptures": {
        "1": {
          "name": "keyword.class.definition"
        },
        "2": {
          "name": "entity.name.class"
        },
        "3": {
          "name": "punctuation.definition.brace"
        }
      },
      "end": "(?<=\\})",
      "endCaptures": {
        "0": {
          "name": "punctuation.end.brace"
        }
      },
      "patterns": [{ "include": "#relation" }, { "include": "#permission" }, { "include": "#comment" }]
    },
    "relation": {
      "comment": "definition of a relation",
      "begin": "(\\brelation\\b)\\s+([a-zA-Z_]\\w*)\\s*(\\:)",
      "beginCaptures": {
        "1": {
          "name": "keyword.variable.relation"
        },
        "2": {
          "name": "entity.name.variable"
        },
        "3": {
          "name": "punctuation.definition.colon"
        }
      },
      "end": "(?<=\\;|\\n)",
      "patterns": [
        { "include": "#wildcardRelationType" },
        { "include": "#indirectRelationType" },
        { "include": "#directRelationType" },
        { "include": "#pipe" },
        { "include": "#comment" }
      ]
    },
    "pipe": {
      "comment": "pipe",
      "match": "\\|",
      "name": "punctuation.definition.pipe"
    },
    "wildcardRelationType": {
      "comment": "wildcard relation type",
      "match": "([a-zA-Z_]\\w*)(\\:)(\\*)",
      "captures": {
        "1": {
          "name": "entity.name.class"
        },
        "2": {
          "name": "punctuation.definition.colon"
        },
        "3": {
          "name": "keyword.operator.wildcard markup.bold.authzed"
        }
      }
    },
    "directRelationType": {
      "comment": "direct relation type",
      "match": "([a-zA-Z_]\\w*)",
      "captures": {
        "1": {
          "name": "entity.name.class"
        }
      }
    },
    "indirectRelationType": {
      "comment": "indirect relation type",
      "match": "([a-zA-Z_]\\w*)(#)([a-zA-Z_]\\w*)",
      "captures": {
        "1": {
          "name": "entity.name.class"
        },
        "2": {
          "name": "punctuation.definition.hash"
        },
        "3": {
          "name": "entity.name.variable"
        }
      }
    },
    "permission": {
      "comment": "definition of a permission",
      "begin": "(\\permission\\b)\\s+([a-zA-Z_]\\w*)\\s*(\\=)\\s*",
      "beginCaptures": {
        "1": {
          "name": "keyword.function.relation"
        },
        "2": {
          "name": "entity.name.function"
        },
        "3": {
          "name": "punctuation.definition.equal"
        }
      },
      "end": "(?<=\\;|\\n)",
      "patterns": [
        { "include": "#comment" },
        { "include": "#arrow" },
        { "include": "#nil" },
        { "include": "#relationRef" },
        { "include": "#permissionOperator" }
      ]
    },
    "nil": {
      "comment": "nil reference",
      "match": "nil",
      "captures": {
        "1": {
          "name": "keyword.operator.nil"
        }
      }
    },
    "relationRef": {
      "comment": "relation reference",
      "match": "([a-zA-Z_]\\w*)",
      "captures": {
        "1": {
          "name": "entity.name.variable"
        }
      }
    },
    "permissionOperator": {
      "comment": "permission operator",
      "match": "\\s*(\\+|\\-|\\&)\\s*",
      "captures": {
        "1": {
          "name": "keyword.operator.logical"
        }
      }
    },
    "arrow": {
      "comment": "arrow",
      "match": "\\s*([a-zA-Z_]\\w*)(\\-\\>)([a-zA-Z_]\\w*)\\s*",
      "captures": {
        "1": {
          "name": "entity.name.variable"
        },
        "2": {
          "name": "keyword.operator.arrow markup.bold.authzed"
        },
        "3": {
          "name": "entity.name.variable"
        }
      }
    },
    "caveat": {
      "comment": "caveat in schema",
      "name": "meta.embedded.block.cel",
      "begin": "(\\bcaveat\\b)\\s+([a-zA-Z_]\\w*)\\s*\\(([^\\)]*)\\)\\s*(\\{)",
      "beginCaptures": {
        "1": {
          "name": "keyword.function.definition"
        },
        "2": {
          "name": "entity.name.function"
        },
        "3": {
          "patterns": [{ "include": "#caveatParameter" }, { "include": "#caveatTypeName" }, { "include": "#comma" }]
        },
        "4": {
          "name": "punctuation.definition.brace"
        }
      },
      "end": "(?<=\\})$",
      "endCaptures": {
        "0": {
          "name": "punctuation.end.brace"
        }
      },
      "patterns": [{ "include": "source.cel" }]
    },
    "caveatTypeName": {
      "comment": "caveat type name",
      "match": "\\s*([a-zA-Z_]\\w*)\\s*",
      "captures": {
        "1": {
          "name": "entity.name.class"
        }
      }
    },
    "caveatParameter": {
      "comment": "caveat parameter",
      "match": "([a-zA-Z_]\\w*)\\s+([a-zA-Z_]\\w*)",
      "captures": {
        "1": {
          "name": "entity.name.variable"
        },
        "2": {
          "name": "entity.name.class"
        }
      }
    },
    "comma": {
      "comment": "comma",
      "match": "\\s*\\,\\s*",
      "name": "punctuation.definition.comma"
    }
  }
}
